# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2017, Python Software Foundation (translated by Python ドキュメント日本語翻訳プロジェクト)
# This file is distributed under the same license as the Python package.
# 
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: 秘湯 <xwhhsprings@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "リストオブジェクト"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr "この :c:type:`PyObject` のサブタイプは Python のリストオブジェクトを表現します。"

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type.  "
"This is the same object as ``list`` in the Python layer."
msgstr "この :c:type:`PyTypeObject` のインスタンスは Python のリスト型を表現します。これは Python レイヤにおける :class:`list` と同じオブジェクトです。"

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type."
msgstr "*p* がリストオブジェクトか、リスト型のサブタイプのインスタンスである場合に真を返します。"

#: ../../c-api/list.rst:27
msgid "Allowed subtypes to be accepted."
msgstr "サブタイプを引数にとれるようになりました."

#: ../../c-api/list.rst:33
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the"
" list type."
msgstr "*p* がリスト型オブジェクトであり、かつリスト型のサブクラスのインスタンスでない場合に真を返します。"

#: ../../c-api/list.rst:41
msgid "Return a new list of length *len* on success, or *NULL* on failure."
msgstr "サイズが *len* 新たなリストオブジェクトを返します。失敗すると *NULL* を返します。"

#: ../../c-api/list.rst:45
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as "
":c:func:`PySequence_SetItem`  or expose the object to Python code before "
"setting all items to a real object with :c:func:`PyList_SetItem`."
msgstr "*len* が0より大きいとき、返されるリストオブジェクトの要素には ``NULL`` がセットされています。なので、 :c:func:`PyList_SetItem` で本当にオブジェクトをセットするまでは、Pythonコードにこのオブジェクトを渡したり、 :c:func:`PySequence_SetItem` のような抽象APIを利用してはいけません。"

#: ../../c-api/list.rst:50
msgid ""
"This function used an :c:type:`int` for *size*. This might require changes "
"in your code for properly supporting 64-bit systems."
msgstr "この関数は以前は *size* の型に :c:type:`int` を利用していました。この変更により、 64bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:59
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr "リストオブジェクト *list* の長さを返します; リストオブジェクトにおける ``len(list)`` と同じです。"

#: ../../c-api/list.rst:62
msgid ""
"This function returned an :c:type:`int`. This might require changes in your "
"code for properly supporting 64-bit systems."
msgstr "この関数は以前は :c:type:`int` を返していました。この変更により、 64 bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:69
msgid "Macro form of :c:func:`PyList_Size` without error checking."
msgstr "マクロ形式でできた :c:func:`PyList_Size` で、エラーチェックをしません。"

#: ../../c-api/list.rst:71
msgid ""
"This macro returned an :c:type:`int`. This might require changes in your "
"code for properly supporting 64-bit systems."
msgstr "このマクロは以前は :c:type:`int` を返していました。この変更により、 64 bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:78
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The"
" position must be positive, indexing from the end of the list is not "
"supported.  If *index* is out of bounds, return *NULL* and set an "
":exc:`IndexError` exception."
msgstr "*list* の指すリストオブジェクト内の、位置 *index* にあるオブジェクトを返します。位置は正である必要があり、リスト終端からのインデックスはサポートされていません。 *index* が範囲を超えている場合、 *NULL* を返して :exc:`IndexError` 例外をセットします。"

#: ../../c-api/list.rst:83 ../../c-api/list.rst:107 ../../c-api/list.rst:135
msgid ""
"This function used an :c:type:`int` for *index*. This might require changes "
"in your code for properly supporting 64-bit systems."
msgstr "この関数は以前は *index* の型に :c:type:`int` を利用していました。この変更により、 64 bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:90
msgid "Macro form of :c:func:`PyList_GetItem` without error checking."
msgstr "マクロ形式でできた :c:func:`PyList_GetItem` で、エラーチェックをしません。"

#: ../../c-api/list.rst:92 ../../c-api/list.rst:124
msgid ""
"This macro used an :c:type:`int` for *i*. This might require changes in your"
" code for properly supporting 64-bit systems."
msgstr "このマクロは以前は *i* の型に :c:type:`int` を利用していました。この変更により、 64 bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:99
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success or"
" ``-1`` on failure."
msgstr "リストオブジェクト内の位置 *index* に、オブジェクト *item* を挿入します。成功した場合には ``0`` を返し、失敗すると ``-1`` を返します。"

#: ../../c-api/list.rst:104
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr "この関数は *item* への参照を \"盗み取り\" ます。また、変更先のインデクスにすでに別の要素が入っている場合、その要素に対する参照を放棄します。"

#: ../../c-api/list.rst:114
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ":c:func:`PyList_SetItem` をマクロによる実装で、エラーチェックを行いません。このマクロは、新たなリストのまだ要素を入れたことのない位置に要素を入れるときにのみ使います。"

#: ../../c-api/list.rst:119
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike "
":c:func:`PyList_SetItem`, does *not* discard a reference to any item that it"
" being replaced; any reference in *list* at position *i* will be leaked."
msgstr "このマクロは *item* への参照を \"盗み取り\" ます。また、 :c:func:`PyList_SetItem` と違って、要素の置き換えが生じても置き換えられるオブジェクトへの参照を放棄 *しません* ; その結果、 *list* 中の位置 *i* で参照されていたオブジェクトがメモリリークを引き起こします。"

#: ../../c-api/list.rst:131
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr "要素 *item* をリスト *list* のインデックス *index* の前に挿入します。成功すると ``0`` を返します。失敗すると ``-1`` を返し、例外をセットします。``list.insert(index, item)`` に類似した機能です。"

#: ../../c-api/list.rst:142
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr "オブジェクト *item* を *list* の末尾に追加します。成功すると ``0`` を返します; 失敗すると ``-1`` を返し、例外をセットします。``list.append(item)``  に類似した機能です。"

#: ../../c-api/list.rst:149
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return *NULL* and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Negative indices, as when slicing from "
"Python, are not supported."
msgstr "*list* 内の、*low* から *high* の *間の* オブジェクトからなるリストを返します。失敗すると *NULL* を返し、例外をセットします。``list[low:high]`` に類似した機能です。ただし、Python のスライスにある負のインデックスはサポートされていません。"

#: ../../c-api/list.rst:154 ../../c-api/list.rst:167
msgid ""
"This function used an :c:type:`int` for *low* and *high*. This might require"
" changes in your code for properly supporting 64-bit systems."
msgstr "この関数は以前は *low* と *high* に :c:type:`int *` 型を使用していました。この変更により、 64 bit システムを正しくサポートするには修正が必要になります。"

#: ../../c-api/list.rst:161
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be *NULL*, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Negative indices, as when "
"slicing from Python, are not supported."
msgstr "*list* 内の、*low* から *high* の間のオブジェクトを、*itemlist* の内容にします。``list[low:high] = itemlist`` と類似の機能です。*itemlist* は *NULL* でもよく、空リストの代入 (指定スライスの削除) になります。成功した場合には ``0`` を、失敗した場合には ``-1`` を返します。Python のスライスにある負のインデックスはサポートされていません。"

#: ../../c-api/list.rst:174
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr "*list* の内容をインプレースでソートします。成功した場合には ``0`` を、失敗した場合には ``-1`` を返します。``list.sort()`` と同じです。"

#: ../../c-api/list.rst:180
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr "*list* の要素をインプレースで反転します。成功した場合には ``0`` を、失敗した場合には ``-1`` を返します。``list.reverse()`` と同じです。"

#: ../../c-api/list.rst:188
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr "*list* の内容が入った新たなタプルオブジェクトを返します; ``tuple(list)`` と同じです。"
