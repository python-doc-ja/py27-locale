# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# Hiroaki Itoh <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-01 17:54+0900\n"
"PO-Revision-Date: 2016-03-03 21:11+0000\n"
"Last-Translator: Hiroaki Itoh <xwhhsprings@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pty.rst:3
msgid ":mod:`pty` --- Pseudo-terminal utilities"
msgstr ":mod:`pty` --- 擬似端末ユーティリティ"

#: ../../library/pty.rst:12
msgid ""
"The :mod:`pty` module defines operations for handling the pseudo-terminal "
"concept: starting another process and being able to write to and read from "
"its controlling terminal programmatically."
msgstr ":mod:`pty` モジュールは擬似端末(他のプロセスを実行してその制御をしている端末をプログラムで読み書きする)を制御する操作を定義しています。"

#: ../../library/pty.rst:16
msgid ""
"Because pseudo-terminal handling is highly platform dependent, there is code"
" to do it only for Linux. (The Linux code is supposed to work on other "
"platforms, but hasn't been tested yet.)"
msgstr "擬似端末の制御はプラットフォームに強く依存するので、Linux用のコードしか存在していません。(Linux用のコードは他のプラットフォームでも動作するように作られていますがテストされていません。)"

#: ../../library/pty.rst:20
msgid "The :mod:`pty` module defines the following functions:"
msgstr ":mod:`pty` モジュールでは以下の関数を定義しています:"

#: ../../library/pty.rst:25
msgid ""
"Fork. Connect the child's controlling terminal to a pseudo-terminal. Return "
"value is ``(pid, fd)``. Note that the child  gets *pid* 0, and the *fd* is "
"*invalid*. The parent's return value is the *pid* of the child, and *fd* is "
"a file descriptor connected to the child's controlling terminal (and also to"
" the child's standard input and output)."
msgstr "forkします。子プロセスの制御端末を擬似端末に接続します。返り値は ``(pid, fd)`` です。子プロセスは *pid* として0、*fd* として *invalid* をそれぞれ受けとります。親プロセスは *pid* として子プロセスのPID、*fd* として子プロセスの制御端末 (子プロセスの標準入出力に接続されている)のファイル記述子を受けとります。"

#: ../../library/pty.rst:34
msgid ""
"Open a new pseudo-terminal pair, using :func:`os.openpty` if possible, or "
"emulation code for generic Unix systems. Return a pair of file descriptors "
"``(master, slave)``, for the master and the slave end, respectively."
msgstr "新しい擬似端末のペアを開きます。利用できるなら :func:`os.openpty` を使い、利用できなければ一般的なUnixシステム用のエミュレーションコードを使います。マスター、スレーブそれぞれのためのファイル記述子、 ``(master, slave)`` のタプルを返します。"

#: ../../library/pty.rst:41
msgid ""
"Spawn a process, and connect its controlling terminal with the current "
"process's standard io. This is often used to baffle programs which insist on"
" reading from the controlling terminal."
msgstr "プロセスを生成して制御端末を現在のプロセスの標準入出力に接続します。これは制御端末を読もうとするプログラムをごまかすために利用されます。"

#: ../../library/pty.rst:45
msgid ""
"The functions *master_read* and *stdin_read* should be functions which read "
"from a file descriptor. The defaults try to read 1024 bytes each time they "
"are called."
msgstr "*master_read* と *stdin_read* にはファイル記述子から読み込む関数を指定してください。デフォルトでは呼ばれるたびに1024バイトずつ読み込もうとします。"
