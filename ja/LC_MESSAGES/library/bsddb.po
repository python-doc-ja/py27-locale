# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2017, Python Software Foundation (translated by Python ドキュメント日本語翻訳プロジェクト)
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2017-02-19 15:46+0000\n"
"Last-Translator: cocoatomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/bsddb.rst:3
msgid ":mod:`bsddb` --- Interface to Berkeley DB library"
msgstr ":mod:`bsddb` --- Berkeley DB ライブラリへのインタフェース"

#: ../../library/bsddb.rst:9
msgid "The :mod:`bsddb` module has been removed in Python 3."
msgstr ":mod:`bsddb` モジュールは、 Python 3 で削除されました。"

#: ../../library/bsddb.rst:13
msgid ""
"The :mod:`bsddb` module provides an interface to the Berkeley DB library.  "
"Users can create hash, btree or record based library files using the "
"appropriate open call. Bsddb objects behave generally like dictionaries.  "
"Keys and values must be strings, however, so to use other objects as keys or"
" to store other kinds of objects the user must serialize them somehow, "
"typically using :func:`marshal.dumps` or  :func:`pickle.dumps`."
msgstr ":mod:`bsddb` モジュールは Berkeley DB ライブラリへのインタフェースを提供します。ユーザは適当な :func:`open` 呼び出しを使うことで、ハッシュ、B-Tree、またはレコードに基づくデータベースファイルを生成することができます。bsddb オブジェクトは辞書と大体同じように振る舞います。しかし、キー及び値は文字列でなければならないので、他のオブジェクトをキーとして使ったり、他の種のオブジェクトを記録したい場合、それらのデータを何らかの方法で直列化しなければなりません。これには通常 :func:`marshal.dumps` や :func:`pickle.dumps` が使われます。"

#: ../../library/bsddb.rst:20
msgid ""
"The :mod:`bsddb` module requires a Berkeley DB library version from 4.0 thru"
" 4.7."
msgstr ":mod:`bsddb` モジュールは、バージョン 4.0 から 4.7 までの間の Berkeley DB ライブラリを必要とします。"

#: ../../library/bsddb.rst:29
msgid "http://www.jcea.es/programacion/pybsddb.htm"
msgstr "http://www.jcea.es/programacion/pybsddb.htm"

#: ../../library/bsddb.rst:27
msgid ""
"The website with documentation for the :mod:`bsddb.db` Python Berkeley DB "
"interface that closely mirrors the object oriented interface provided in "
"Berkeley DB 4.x itself."
msgstr "Python Berkeley DBインターフェース :mod:`bsddb.db` のドキュメント。インターフェースは、Berkeley DB 4.x が提供しているオブジェクト指向インターフェースとほぼ同じインターフェースとなっています。"

#: ../../library/bsddb.rst:31
msgid "http://www.oracle.com/database/berkeley-db/"
msgstr "http://www.oracle.com/database/berkeley-db/"

#: ../../library/bsddb.rst:32
msgid "The Berkeley DB library."
msgstr "The Berkeley DB library."

#: ../../library/bsddb.rst:34
msgid ""
"A more modern DB, DBEnv and DBSequence object interface is available in the "
":mod:`bsddb.db` module which closely matches the Berkeley DB C API "
"documented at the above URLs.  Additional features provided by the "
":mod:`bsddb.db` API include fine tuning, transactions, logging, and "
"multiprocess concurrent database access."
msgstr "より新しい DB である DBEnv や DBSequence オブジェクトのインターフェースも :mod:`bsddb.db` モジュールで使用できます。これは、上の URL で説明されている Berkeley DB C API によりマッチしています。 :mod:`bsddb.db` API が提供する追加機能には、チューニングやトランザクション、ログ出力、マルチプロセス環境でのデータベースへの同時アクセスなどがあります。"

#: ../../library/bsddb.rst:39
msgid ""
"The following is a description of the legacy :mod:`bsddb` interface "
"compatible with the old Python bsddb module.  Starting in Python 2.5 this "
"interface should be safe for multithreaded access.  The :mod:`bsddb.db` API "
"is recommended for threading users as it provides better control."
msgstr "以下では、従来のbsddbモジュールと互換性のある、古いインターフェースを解説しています。Python 2.5 以降、このインターフェースはマルチスレッドに対応しています。マルチスレッドを使用する場合は :mod:`bsddb.db` API を推奨します。こちらのほうがスレッドをよりうまく制御できるからです。"

#: ../../library/bsddb.rst:44
msgid ""
"The :mod:`bsddb` module defines the following functions that create objects "
"that access the appropriate type of Berkeley DB file.  The first two "
"arguments of each function are the same.  For ease of portability, only the "
"first two arguments should be used in most instances."
msgstr ":mod:`bsddb` モジュールでは、適切な形式の Berkeley DB ファイルにアクセスするオブジェクトを生成する以下の関数を定義しています。各関数の最初の二つの引数は同じです。可搬性のために、ほとんどのインスタンスでは最初の二つの引数だけが使われているはずです。"

#: ../../library/bsddb.rst:52
msgid ""
"Open the hash format file named *filename*.  Files never intended to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write), ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level "
":c:func:`dbopen` function.  Consult the Berkeley DB documentation for their "
"use and interpretation."
msgstr "*filename* と名づけられたハッシュ形式のファイルを開きます。 *filename* に ``None`` を指定することで、ディスクに保存するつもりがないファイルを生成することもできます。オプションの *flag* には、ファイルを開くためのモードを指定します。このモードは ``'r'`` (読み出し専用), ``'w'`` (読み書き可能)、 ``'c'`` (読み書き可能 - 必要ならファイルを生成…これがデフォルトです) または ``'n'`` (読み書き可能 - ファイル長を 0 に切り詰め)、にすることができます。他の引数はほとんど使われることはなく、下位レベルの :c:func:`dbopen` 関数に渡されるだけです。他の引数の使い方およびその解釈については Berkeley DB のドキュメントを読んで下さい。"

#: ../../library/bsddb.rst:64
msgid ""
"Open the btree format file named *filename*.  Files never intended  to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write), ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level "
"dbopen function. Consult the Berkeley DB documentation for their use and "
"interpretation."
msgstr "*filename* と名づけられた B-Tree 形式のファイルを開きます。 *filename* に ``None`` を指定することで、ディスクに保存するつもりがないファイルを生成することもできます。オプションの *flag* には、ファイルを開くためのモードを指定します。このモードは ``'r'`` (読み出し専用)、 ``'w'`` (読み書き可能)、 ``'c'`` (読み書き可能 - 必要ならファイルを生成…これがデフォルトです)、または ``'n'`` (読み書き可能 - ファイル長を 0 に切り詰め)、にすることができます。他の引数はほとんど使われることはなく、下位レベルの :c:func:`dbopen` 関数に渡されるだけです。他の引数の使い方およびその解釈については Berkeley DB のドキュメントを読んで下さい。"

#: ../../library/bsddb.rst:75
msgid ""
"Open a DB record format file named *filename*.  Files never intended  to be "
"preserved on disk may be created by passing ``None`` as the  *filename*.  "
"The optional *flag* identifies the mode used to open the file.  It may be "
"``'r'`` (read only), ``'w'`` (read-write), ``'c'`` (read-write - create if "
"necessary; the default) or ``'n'`` (read-write - truncate to zero length).  "
"The other arguments are rarely used and are just passed to the low-level "
"dbopen function. Consult the Berkeley DB documentation for their use and "
"interpretation."
msgstr "*filename* と名づけられた DB レコード形式のファイルを開きます、 *filename* に ``None`` を指定することで、ディスクに保存するつもりがないファイルを生成することもできます、オプションの *flag* には、ファイルを開くためのモードを指定します、このモードは ``'r'`` (読み出し専用), ``'w'`` (読み書き可能)、 ``'c'`` (読み書き可能 - 必要ならファイルを生成…これがデフォルトです)、または ``'n'`` (読み書き可能 - ファイル長を 0 に切り詰め)、にすることができます。他の引数はほとんど使われることはなく、下位レベルの :c:func:`dbopen` 関数に渡されるだけです、他の引数の使い方およびその解釈については Berkeley DB のドキュメントを読んで下さい。"

#: ../../library/bsddb.rst:85
msgid ""
"Beginning in 2.3 some Unix versions of Python may have a :mod:`bsddb185` "
"module. This is present *only* to allow backwards compatibility with systems"
" which ship with the old Berkeley DB 1.85 database library.  The "
":mod:`bsddb185` module should never be used directly in new code. The module"
" has been removed in Python 3.  If you find you still need it look in PyPI."
msgstr "2.3 以降の Unix 版 Python には、 :mod:`bsddb185` モジュールが存在する場合があります。このモジュールは古い Berkeley DB 1.85 データベースライブラリを持つシステムをサポートするため *だけ* に存在しています。新規に開発するコードでは、 :mod:`bsddb185` を直接使用しないで下さい。このモジュールは Python 3 で削除されます。必要であれば、PyPI にあるかもしれません。"

#: ../../library/bsddb.rst:94
msgid "Module :mod:`dbhash`"
msgstr ""

#: ../../library/bsddb.rst:95
msgid "DBM-style interface to the :mod:`bsddb`"
msgstr ":mod:`bsddb` への DBM 形式のインタフェース"

#: ../../library/bsddb.rst:101
msgid "Hash, BTree and Record Objects"
msgstr "ハッシュ、BTree、およびレコードオブジェクト"

#: ../../library/bsddb.rst:103
msgid ""
"Once instantiated, hash, btree and record objects support the same methods "
"as dictionaries.  In addition, they support the methods listed below."
msgstr "インスタンス化したハッシュ、B-Tree, およびレコードオブジェクトは辞書型と同じメソッドをサポートするようになります。加えて、以下に列挙したメソッドもサポートします。"

#: ../../library/bsddb.rst:106
msgid "Added dictionary methods."
msgstr "辞書型メソッドを追加しました."

#: ../../library/bsddb.rst:112
msgid ""
"Close the underlying file.  The object can no longer be accessed.  Since "
"there is no open :meth:`open` method for these objects, to open the file "
"again a new :mod:`bsddb` module open function must be called."
msgstr "データベースの背後にあるファイルを閉じます。オブジェクトはアクセスできなくなります。これらのオブジェクトには :meth:`oepn` メソッドがないため、再度ファイルを開くためには、新たな :mod:`bsddb` モジュールを開く関数を呼び出さなくてはなりません。"

#: ../../library/bsddb.rst:119
msgid ""
"Return the list of keys contained in the DB file.  The order of the list is "
"unspecified and should not be relied on.  In particular, the order of the "
"list returned is different for different file formats."
msgstr "DB ファイルに収められているキーからなるリストを返します。リスト内のキーの順番は決まっておらず、あてにはなりません。特に、異なるファイル形式の DB 間では返されるリストの順番が異なります。"

#: ../../library/bsddb.rst:126
msgid "Return ``1`` if the DB file contains the argument as a key."
msgstr "引数 *key* が DB ファイルにキーとして含まれている場合 ``1`` を返します。"

#: ../../library/bsddb.rst:131
msgid ""
"Set the cursor to the item indicated by *key* and return a tuple containing "
"the key and its value.  For binary tree databases (opened using "
":func:`btopen`), if *key* does not actually exist in the database, the "
"cursor will point to the next item in sorted order and return that key and "
"value.  For other databases, :exc:`KeyError` will be raised if *key* is not "
"found in the database."
msgstr "カーソルを *key* で示される要素に移動し、キー及び値からなるタプルを返します。(:func:`bopen` を使って開かれる) B-Tree データベースでは、 *key* が実際にはデータベース内に存在しなかった場合、カーソルは並び順が *key* の次に来るような要素を指し、その場所のキー及び値が返されます。他のデータベースでは、データベース中に *key* が見つからなかった場合 :exc:`KeyError` が送出されます。"

#: ../../library/bsddb.rst:140
msgid ""
"Set the cursor to the first item in the DB file and return it.  The order of"
" keys in the file is unspecified, except in the case of B-Tree databases. "
"This method raises :exc:`bsddb.error` if the database is empty."
msgstr "カーソルを DB ファイルの最初の要素に設定し、その要素を返します。 B-Tree データベースの場合を除き、ファイル中のキーの順番は決まっていません。データベースが空の場合、このメソッドは :exc:`bsddb.error` を発生させます。"

#: ../../library/bsddb.rst:147
msgid ""
"Set the cursor to the next item in the DB file and return it.  The order of "
"keys in the file is unspecified, except in the case of B-Tree databases."
msgstr "カーソルを DB ファイルの次の要素に設定し、その要素を返します。 B-Tree データベースの場合を除き、ファイル中のキーの順番は決まっていません。"

#: ../../library/bsddb.rst:153
msgid ""
"Set the cursor to the previous item in the DB file and return it.  The order"
" of keys in the file is unspecified, except in the case of B-Tree databases."
"  This is not supported on hashtable databases (those opened with "
":func:`hashopen`)."
msgstr "カーソルを DB ファイルの直前の要素に設定し、その要素を返します。 B-Tree データベースの場合を除き、ファイル中のキーの順番は決まっていません。 (:func:`hashopen` で開かれるような) ハッシュ表データベースではサポートされていません。"

#: ../../library/bsddb.rst:160
msgid ""
"Set the cursor to the last item in the DB file and return it.  The order of "
"keys in the file is unspecified.  This is not supported on hashtable "
"databases (those opened with :func:`hashopen`). This method raises "
":exc:`bsddb.error` if the database is empty."
msgstr "カーソルを DB ファイルの最後の要素に設定し、その要素を返します。ファイル中のキーの順番は決まっていません。 (:func:`hashopen` で開かれるような) ハッシュ表データベースではサポートされていません。データベースが空の場合、このメソッドは :exc:`bsddb.error` を発生させます。"

#: ../../library/bsddb.rst:168
msgid "Synchronize the database on disk."
msgstr "ディスク上のファイルをデータベースに同期させます。"

#: ../../library/bsddb.rst:170
msgid "Example::"
msgstr "以下はプログラム例です::"
