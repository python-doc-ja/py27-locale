# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2017, Python Software Foundation (translated by Python ドキュメント日本語翻訳プロジェクト)
# This file is distributed under the same license as the Python package.
# 
# Translators:
# cocoatomo, 2017
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2017-09-22 17:56+0000\n"
"Last-Translator: cocoatomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/simplehttpserver.rst:3
msgid ":mod:`SimpleHTTPServer` --- Simple HTTP request handler"
msgstr ":mod:`SimpleHTTPServer` --- 簡潔な HTTP リクエストハンドラ"

#: ../../library/simplehttpserver.rst:10
msgid ""
"The :mod:`SimpleHTTPServer` module has been merged into :mod:`http.server` "
"in Python 3.  The :term:`2to3` tool will automatically adapt imports when "
"converting your sources to Python 3."
msgstr ":mod:`SimpleHTTPServer` モジュールは、Python 3では :mod:`http.server` モジュールに統合されました。 :term:`2to3` ツールが自動的にソースコード内の import を修正します。"

#: ../../library/simplehttpserver.rst:15
msgid ""
"The :mod:`SimpleHTTPServer` module defines a single class, "
":class:`SimpleHTTPRequestHandler`, which is interface-compatible with "
":class:`BaseHTTPServer.BaseHTTPRequestHandler`."
msgstr ":mod:`SimpleHTTPServer` モジュールは、 :class:`SimpleHTTPRequestHandler` クラス 1 つを提供しています。このクラスは、 :class:`BaseHTTPServer.BaseHTTPRequestHandler` に対して互換性のあるインタフェースを持っています。"

#: ../../library/simplehttpserver.rst:19
msgid "The :mod:`SimpleHTTPServer` module defines the following class:"
msgstr ":mod:`SimpleHTTPServer` モジュールは以下のクラスを定義します:"

#: ../../library/simplehttpserver.rst:24
msgid ""
"This class serves files from the current directory and below, directly "
"mapping the directory structure to HTTP requests."
msgstr "このクラスは、現在のディレクトリ以下にあるファイルを、HTTP リクエストにおけるディレクトリ構造に直接対応付けて提供します。"

#: ../../library/simplehttpserver.rst:27
msgid ""
"A lot of the work, such as parsing the request, is done by the base class "
":class:`BaseHTTPServer.BaseHTTPRequestHandler`.  This class implements the "
":func:`do_GET` and :func:`do_HEAD` functions."
msgstr "リクエストの解釈のような、多くの作業は基底クラス :class:`BaseHTTPServer.BaseHTTPRequestHandler` で行われます。このクラスは関数 :func:`do_GET` および :func:`do_HEAD` を実装しています。"

#: ../../library/simplehttpserver.rst:31
msgid ""
"The following are defined as class-level attributes of "
":class:`SimpleHTTPRequestHandler`:"
msgstr ":class:`SimpleHTTPRequestHandler` では以下のメンバ変数を定義しています:"

#: ../../library/simplehttpserver.rst:37
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr "この値は ``\"SimpleHTTP/\" + __version__`` になります。``__version__`` はこのモジュールで定義されている値です。"

#: ../../library/simplehttpserver.rst:43
msgid ""
"A dictionary mapping suffixes into MIME types. The default is signified by "
"an empty string, and is considered to be ``application/octet-stream``. The "
"mapping is used case-insensitively, and so should contain only lower-cased "
"keys."
msgstr "拡張子を MIME 型指定子に対応付ける辞書です。標準の型指定は空文字列で表され、この値は ``application/octet-stream`` と見なされます。対応付けは大小文字の区別をするので、小文字のキーのみを入れるべきです。"

#: ../../library/simplehttpserver.rst:48
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr ":class:`SimpleHTTPRequestHandler` では以下のメソッドを定義しています:"

#: ../../library/simplehttpserver.rst:53
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method"
" for a more complete explanation of the possible headers."
msgstr "このメソッドは ``'HEAD'`` 型のリクエスト処理を実行します: すなわち、 ``GET`` リクエストの時に送信されるものと同じヘッダを送信します。送信される可能性のあるヘッダについての完全な説明は :meth:`do_GET` メソッドを参照してください。"

#: ../../library/simplehttpserver.rst:60
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr "リクエストを現在の作業ディレクトリからの相対的なパスとして解釈することで、リクエストをローカルシステム上のファイルと対応付けます。"

#: ../../library/simplehttpserver.rst:63
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses "
":func:`os.listdir` to scan the directory, and returns a ``404`` error "
"response if the :func:`listdir` fails."
msgstr "リクエストがディレクトリに対応付けられた場合、 ``index.html`` または ``index.htm`` を (この順序で) チェックします。もしファイルを発見できればその内容を、そうでなければディレクトリ一覧を :meth:`list_directory` メソッドで生成して、返します。このメソッドは :func:`os.listdir` をディレクトリのスキャンに用いており、 :func:`listdir` が失敗した場合には ``404`` 応答が返されます。"

#: ../../library/simplehttpserver.rst:70
msgid ""
"If the request was mapped to a file, it is opened and the contents are "
"returned.  Any :exc:`IOError` exception in opening the requested file is "
"mapped to a ``404``, ``'File not found'`` error. Otherwise, the content type"
" is guessed by calling the :meth:`guess_type` method, which in turn uses the"
" *extensions_map* variable."
msgstr "リクエストがファイルに対応付けられた場合、そのファイルを開いて内容を返します。要求されたファイルを開く際に何らかの :exc:`IOError` 例外が送出された場合、リクエストは ``404`` 、 ``'File not found'`` エラーに対応づけられます。そうでない場合、 *extensions_map* 変数を用いて :meth:`guess_type`  メソッドにより content-type が推測されます。"

#: ../../library/simplehttpserver.rst:76
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr "出力は ``'Content-type:'`` と推測されたコンテントタイプで、その後にファイルサイズを示す ``'Content-Length;'`` ヘッダと、ファイルの更新日時を示す ``'Last-Modified:'`` ヘッダが続きます。"

#: ../../library/simplehttpserver.rst:80
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with "
"``text/`` the file is opened in text mode; otherwise binary mode is used."
msgstr "そしてヘッダの終了を示す空白行が続き、さらにその後にファイルの内容が続きます。このファイルはコンテントタイプが ``text/`` で始まっている場合はテキストモードで、そうでなければバイナリモードで開かれます。"

#: ../../library/simplehttpserver.rst:84
msgid ""
"The :func:`test` function in the :mod:`SimpleHTTPServer` module is an "
"example which creates a server using the :class:`SimpleHTTPRequestHandler` "
"as the Handler."
msgstr ":mod:`SimpleHTTPServer` モジュールの :func:`test` 関数は :class:`SimpleHTTPRequestHandler` をハンドラとして使うサーバを作る例になっています。"

#: ../../library/simplehttpserver.rst:88
msgid "The ``'Last-Modified'`` header."
msgstr "``'Last-Modified'`` ヘッダ."

#: ../../library/simplehttpserver.rst:92
msgid ""
"The :mod:`SimpleHTTPServer` module can be used in the following manner in "
"order to set up a very basic web server serving files relative to the "
"current directory. ::"
msgstr ":mod:`SimpleHTTPServer` モジュールを使って現在のディレクトリ以下にあるファイルにアクセスできるだけの、非常に初歩的な Web サーバを立ち上げる方法は以下の通りです。 ::"

#: ../../library/simplehttpserver.rst:108
msgid ""
"The :mod:`SimpleHTTPServer` module can also be invoked directly using the "
":option:`-m` switch of the interpreter with a ``port number`` argument. "
"Similar to the previous example, this serves the files relative to the "
"current directory. ::"
msgstr "インタプリタの :option:`-m` スイッチで :mod:`SimpleHTTPServer` モジュールと ``ポート番号`` を指定して直接実行することもできます。上の例と同じように、ここで立ち上がったサーバは現在のディレクトリ以下のファイルへのアクセスを提供します。 ::"

#: ../../library/simplehttpserver.rst:117
msgid "Module :mod:`BaseHTTPServer`"
msgstr ":mod:`BaseHTTPServer` モジュール"

#: ../../library/simplehttpserver.rst:118
msgid "Base class implementation for Web server and request handler."
msgstr "Web サーバとリクエスト処理機構を実装した基底クラスです。"
