# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# Hiroaki Itoh <xwhhsprings@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-01 17:54+0900\n"
"PO-Revision-Date: 2016-01-21 14:52+0000\n"
"Last-Translator: Hiroaki Itoh <xwhhsprings@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/urllib.rst:2
msgid ":mod:`urllib` --- Open arbitrary resources by URL"
msgstr ":mod:`urllib` --- URL による任意のリソースへのアクセス"

#: ../../library/urllib.rst:8
msgid ""
"The :mod:`urllib` module has been split into parts and renamed in Python 3 "
"to :mod:`urllib.request`, :mod:`urllib.parse`, and :mod:`urllib.error`. The "
":term:`2to3` tool will automatically adapt imports when converting your "
"sources to Python 3. Also note that the :func:`urllib.request.urlopen` "
"function in Python 3 is equivalent to :func:`urllib2.urlopen` and that "
":func:`urllib.urlopen` has been removed."
msgstr ":mod:`urllib` モジュールは、Python 3 で :mod:`urllib.request`, :mod:`urllib.parse`, :mod:`urllib.parse` に分割されて名称変更されました。 :term:`2to3` ツールが自動的にソースコードのimportを修正します。また、 Python 3 の :func:`urllib.request.urlopen` 関数は :func:`urllib2.urlopen` を移動したもので、 :func:`urllib.urlopen` のほうは削除されています。"

#: ../../library/urllib.rst:21
msgid ""
"This module provides a high-level interface for fetching data across the "
"World Wide Web.  In particular, the :func:`urlopen` function is similar to "
"the built-in function :func:`open`, but accepts Universal Resource Locators "
"(URLs) instead of filenames.  Some restrictions apply --- it can only open "
"URLs for reading, and no seek operations are available."
msgstr "このモジュールはワールドワイドウェブ (World Wide Web) を介してデータを取り寄せるための高レベルのインタフェースを提供します。特に、関数 :func:`urlopen` は組み込み関数 :func:`open` と同様に動作し、ファイル名の代わりにファイルユニバーサルリソースロケータ (URL) を指定することができます。いくつかの制限はあります --- URL は読み出し専用でしか開けませんし、seek 操作を行うことはできません。"

#: ../../library/urllib.rst:29
msgid ""
"The `Requests package <http://requests.readthedocs.org/>`_ is recommended "
"for a higher-level http client interface."
msgstr "より高いレベルの http クライアントインターフェイスとしては、 `Requests package <http://requests.readthedocs.org/>`_ がお奨めです。"

#: ../../library/urllib.rst:32
msgid ""
"When opening HTTPS URLs, it does not attempt to validate the server "
"certificate.  Use at your own risk!"
msgstr "HTTPS URL を開くときに、サーバ証明書を検証しようとはしません。自己責任でお使い下さい。"

#: ../../library/urllib.rst:37
msgid "High-level interface"
msgstr "高レベルインタフェース"

#: ../../library/urllib.rst:41
msgid ""
"Open a network object denoted by a URL for reading.  If the URL does not "
"have a scheme identifier, or if it has :file:`file:` as its scheme "
"identifier, this opens a local file (without :term:`universal newlines`); "
"otherwise it opens a socket to a server somewhere on the network.  If the "
"connection cannot be made the :exc:`IOError` exception is raised.  If all "
"went well, a file-like object is returned.  This supports the following "
"methods: :meth:`read`, :meth:`readline`, :meth:`readlines`, :meth:`fileno`, "
":meth:`close`, :meth:`info`, :meth:`getcode` and :meth:`geturl`.  It also "
"has proper support for the :term:`iterator` protocol. One caveat: the "
":meth:`read` method, if the size argument is omitted or negative, may not "
"read until the end of the data stream; there is no good way to determine "
"that the entire stream from a socket has been read in the general case."
msgstr "URL で表されるネットワーク上のオブジェクトを読み込み用に開きます。 URL がスキーム識別子を持たないか、スキーム識別子が file: である場合、ローカルシステムのファイルが (:term:`universal newlines` なしで) 開かれます。それ以外の場合はネットワーク上のどこかにあるサーバへのソケットを開きます。接続を作ることができない場合、例外 IOError が送出されます。全ての処理がうまくいけば、ファイル類似のオブジェクトが返されます。このオブジェクトは以下のメソッド: :meth:`read()`, :meth:`readline()`, :meth:`readlines()`, :meth:`fileno()`, :meth:`close()`, :meth:`info()`, :meth:`getcode()`, :meth:`geturl()` をサポートします。また、:term:`iterator` プロトコルも正しくサポートしています。注意: :meth:`read()` の引数を省略または負の値を指定しても、データストリームの最後まで読みこむ訳ではありません。ソケットからすべてのストリームを読み込んだことを決定する一般的な方法は存在しません。"

#: ../../library/urllib.rst:54
msgid ""
"Except for the :meth:`info`, :meth:`getcode` and :meth:`geturl` methods, "
"these methods have the same interface as for file objects --- see section "
":ref:`bltin-file-objects` in this manual.  (It is not a built-in file "
"object, however, so it can't be used at those few places where a true built-"
"in file object is required.)"
msgstr ":meth:`info`, :meth:`getcode`, :meth:`geturl` メソッドを除き、これらのメソッドはファイルオブジェクトと同じインタフェースを持っています --- このマニュアルの :ref:`bltin-file-objects` セクションを参照してください。 (このオブジェクトは組み込みのファイルオブジェクトではありませんが、まれに本物の組み込みファイルオブジェクトが必要な場所で使うことができません)"

#: ../../library/urllib.rst:62
msgid ""
"The :meth:`info` method returns an instance of the class "
":class:`mimetools.Message` containing meta-information associated with the "
"URL.  When the method is HTTP, these headers are those returned by the "
"server at the head of the retrieved HTML page (including Content-Length and "
"Content-Type).  When the method is FTP, a Content-Length header will be "
"present if (as is now usual) the server passed back a file length in "
"response to the FTP retrieval request. A Content-Type header will be present"
" if the MIME type can be guessed.  When the method is local-file, returned "
"headers will include a Date representing the file's last-modified time, a "
"Content-Length giving file size, and a Content-Type containing a guess at "
"the file's type. See also the description of the :mod:`mimetools` module."
msgstr ":meth:`info` メソッドは開いた URL に関連付けられたメタ情報を含む :class:`mimetools.Message` クラスのインスタンスを返します。 URL へのアクセスメソッドが HTTP である場合、メタ情報中のヘッダ情報はサーバが HTML ページを返すときに先頭に付加するヘッダ情報です (Content-Length および Content-Type を含みます)。アクセスメソッドが FTP の場合、ファイル取得リクエストに応答してサーバがファイルの長さを返したときには (これは現在では普通になりましたが) Content-Length ヘッダがメタ情報に含められます。 Content-type ヘッダは MIME タイプが推測可能なときにメタ情報に含められます。アクセスメソッドがローカルファイルの場合、返されるヘッダ情報にはファイルの最終更新日時を表す Date エントリ、ファイルのサイズを示す Content-Length エントリ、そして推測されるファイル形式の Content-Type エントリが含まれます。 :mod:`mimetools` モジュールを参照してください。"

#: ../../library/urllib.rst:74
msgid ""
"The :meth:`geturl` method returns the real URL of the page.  In some cases, "
"the HTTP server redirects a client to another URL.  The :func:`urlopen` "
"function handles this transparently, but in some cases the caller needs to "
"know which URL the client was redirected to.  The :meth:`geturl` method can "
"be used to get at this redirected URL."
msgstr ":meth:`geturl` メソッドはページの実際の URL を返します。場合によっては、HTTP サーバはクライアントの要求を他の URL に振り向け (redirect 、リダイレクト ) します。関数 :func:`urlopen` はユーザに対してリダイレクトを透過的に行いますが、呼び出し側にとってクライアントがどの URL にリダイレクトされたかを知りたいときがあります。 :meth:`geturl` メソッドを使うと、このリダイレクトされた URL を取得できます。"

#: ../../library/urllib.rst:80
msgid ""
"The :meth:`getcode` method returns the HTTP status code that was sent with "
"the response, or ``None`` if the URL is no HTTP URL."
msgstr ":meth:`getcode` メソッドは、レスポンスと共に送られてきたHTTPステータスコードを返します。 URLがHTTP URLでなかった場合は、 ``None`` を返します。"

#: ../../library/urllib.rst:83
msgid ""
"If the *url* uses the :file:`http:` scheme identifier, the optional *data* "
"argument may be given to specify a ``POST`` request (normally the request "
"type is ``GET``).  The *data* argument must be in standard "
":mimetype:`application/x-www-form-urlencoded` format; see the "
":func:`urlencode` function below."
msgstr "*url* に :file:`http:` スキーム識別子を使う場合、 *data* 引数を与えて ``POST`` 形式のリクエストを行うことができます (通常リクエストの形式は ``GET`` です)。引数 *data* は標準の :mimetype:`application/x-www-form-urlencoded` 形式でなければなりません; 以下の :func:`urlencode` 関数を参照してください。"

#: ../../library/urllib.rst:89
msgid ""
"The :func:`urlopen` function works transparently with proxies which do not "
"require authentication.  In a Unix or Windows environment, set the "
":envvar:`http_proxy`, or :envvar:`ftp_proxy` environment variables to a URL "
"that identifies the proxy server before starting the Python interpreter.  "
"For example (the ``'%'`` is the command prompt)::"
msgstr ":func:`urlopen` 関数は認証を必要としないプロキシ (proxy) に対して透過的に動作します。Unix または Windows 環境では、 Python を起動する前に、環境変数 :envvar:`http_proxy`, :envvar:`ftp_proxy` にそれぞれのプロキシサーバを指定する URL を設定してください。例えば (``'%'`` はコマンドプロンプトです)::"

#: ../../library/urllib.rst:100
msgid ""
"The :envvar:`no_proxy` environment variable can be used to specify hosts "
"which shouldn't be reached via proxy; if set, it should be a comma-separated"
" list of hostname suffixes, optionally with ``:port`` appended, for example "
"``cern.ch,ncsa.uiuc.edu,some.host:8080``."
msgstr ":envvar:`no_proxy` 環境変数は、proxyを利用せずにアクセスするべきホストを指定するために利用されます。設定する場合は、カンマ区切りの、ホストネーム suffix のリストで、オプションとして ``:port`` を付けることができます。例えば、 ``cern.ch,ncsa.uiuc.edu,some.host:8080``."

#: ../../library/urllib.rst:105
msgid ""
"In a Windows environment, if no proxy environment variables are set, proxy "
"settings are obtained from the registry's Internet Settings section."
msgstr "Windows 環境では、プロキシを指定する環境変数が設定されていない場合、プロキシの設定値はレジストリの Internet Settings セクションから取得されます。"

#: ../../library/urllib.rst:110
msgid ""
"In a Mac OS X  environment, :func:`urlopen` will retrieve proxy information "
"from the OS X System Configuration Framework, which can be managed with "
"Network System Preferences panel."
msgstr "Mac OS X では、 :func:`urlopen` はプロキシの情報をシステム設定フレームワーク (Mac OS X System Configuration Framework) から取得します。これはシステム環境設定のネットワークパネルから設定できます。"

#: ../../library/urllib.rst:115
msgid ""
"Alternatively, the optional *proxies* argument may be used to explicitly "
"specify proxies.  It must be a dictionary mapping scheme names to proxy "
"URLs, where an empty dictionary causes no proxies to be used, and ``None`` "
"(the default value) causes environmental proxy settings to be used as "
"discussed above.  For example::"
msgstr "別の方法として、オプション引数 *proxies* を使って明示的にプロキシを設定することができます。この引数はスキーム名をプロキシの URL にマップする辞書型のオブジェクトでなくてはなりません。空の辞書を指定するとプロキシを使いません。 ``None`` (デフォルトの値です) を指定すると、上で述べたように環境変数で指定されたプロキシ設定を使います。例えば::"

#: ../../library/urllib.rst:130
msgid ""
"Proxies which require authentication for use are not currently supported; "
"this is considered an implementation limitation."
msgstr "認証を必要とするプロキシは現在のところサポートされていません。これは実装上の制限 (implementation limitation) と考えています。"

#: ../../library/urllib.rst:133
msgid ""
"The *context* parameter may be set to a :class:`ssl.SSLContext` instance to "
"configure the SSL settings that are used if :func:`urlopen` makes a HTTPS "
"connection."
msgstr "*context* パラメータには :class:`ssl.SSLContext` インスタンスをセットします。これは :func:`urlopen` が HTTPS 接続をするのに使う SSL 設定を構成します。"

#: ../../library/urllib.rst:137
msgid "Added the *proxies* support."
msgstr "*proxies* のサポートを追加しました。"

#: ../../library/urllib.rst:140
msgid ""
"Added :meth:`getcode` to returned object and support for the "
":envvar:`no_proxy` environment variable."
msgstr "結果オブジェクトに :meth:`getcode` を追加し、 :envvar:`no_proxy` 環境変数に対応しました。"

#: ../../library/urllib.rst:144
msgid "The *context* parameter was added."
msgstr "*context* パラメータが追加されました。"

#: ../../library/urllib.rst:147
msgid ""
"The :func:`urlopen` function has been removed in Python 3 in favor of "
":func:`urllib2.urlopen`."
msgstr ":func:`urlopen` 関数は Python 3 では :func:`urllib2.urlopen` を採用のため撤廃されています。"

#: ../../library/urllib.rst:154
msgid ""
"Copy a network object denoted by a URL to a local file, if necessary. If the"
" URL points to a local file, or a valid cached copy of the object exists, "
"the object is not copied.  Return a tuple ``(filename, headers)`` where "
"*filename* is the local file name under which the object can be found, and "
"*headers* is whatever the :meth:`info` method of the object returned by "
":func:`urlopen` returned (for a remote object, possibly cached). Exceptions "
"are the same as for :func:`urlopen`."
msgstr "URL で表されるネットワーク上のオブジェクトを、必要に応じてローカルなファイルにコピーします。URL がローカルなファイルを指定していたり、オブジェクトのコピーが正しくキャッシュされていれば、そのオブジェクトはコピーされません。タプル ``(filename, headers)`` を返し、 *filename* はローカルで見つかったオブジェクトに対するファイル名で、 *headers* は :func:`urlopen` が返した (おそらくキャッシュされているリモートの) オブジェクトに :meth:`info` を適用して得られるものになります。 :func:`urlopen` と同じ例外を送出します。"

#: ../../library/urllib.rst:162
msgid ""
"The second argument, if present, specifies the file location to copy to (if "
"absent, the location will be a tempfile with a generated name). The third "
"argument, if present, is a hook function that will be called once on "
"establishment of the network connection and once after each block read "
"thereafter.  The hook will be passed three arguments; a count of blocks "
"transferred so far, a block size in bytes, and the total size of the file.  "
"The third argument may be ``-1`` on older FTP servers which do not return a "
"file size in response to a retrieval request."
msgstr "2 つめの引数がある場合、オブジェクトのコピー先となるファイルの位置を指定します (もしなければ、ファイルの場所は一時ファイル (tmpfile) の置き場になり、名前は適当につけられます)。 3 つめの引数がある場合、ネットワークとの接続が確立された際に一度呼び出され、以降データのブロックが読み出されるたびに呼び出されるフック関数 (hook function) を指定します。フック関数には 3 つの引数が渡されます; これまで転送されたブロック数のカウント、バイト単位で表されたブロックサイズ、ファイルの総サイズです。3 つ目のファイルの総サイズは、ファイル取得の際の応答時にファイルサイズを返さない古い FTP サーバでは ``-1`` になります。"

#: ../../library/urllib.rst:171 ../../library/urllib.rst:363
msgid ""
"If the *url* uses the :file:`http:` scheme identifier, the optional *data* "
"argument may be given to specify a ``POST`` request (normally the request "
"type is ``GET``).  The *data* argument must in standard "
":mimetype:`application/x-www-form-urlencoded` format; see the "
":func:`urlencode` function below."
msgstr "*url* が :file:`http:` スキーム識別子を使っていた場合、オプション引数 *data* を与えることで ``POST`` リクエストを行うよう指定することができます (通常リクエストの形式は ``GET`` です)。 *data* 引数は標準の :mimetype:`application/x-www-form-urlencoded` 形式でなくてはなりません; 以下の :func:`urlencode` 関数を参照してください。"

#: ../../library/urllib.rst:177
msgid ""
":func:`urlretrieve` will raise :exc:`ContentTooShortError` when it detects "
"that the amount of data available  was less than the expected amount (which "
"is the size reported by a  *Content-Length* header). This can occur, for "
"example, when the  download is interrupted."
msgstr ":func:`urlretrieve` は、予想 (これは *Content-Length* ヘッダにより通知されるサイズです) よりも取得できるデータ量が少ないことを検知した場合、 :exc:`ContentTooShortError` を発生します。これは、例えば、ダウンロードが中断された場合などに発生します。"

#: ../../library/urllib.rst:183
msgid ""
"The *Content-Length* is treated as a lower bound: if there's more data  to "
"read, :func:`urlretrieve` reads more data, but if less data is available,  "
"it raises the exception."
msgstr "*Content-Length* は下限として扱われます: より多いデータがある場合、 :func:`urlretrieve` はそのデータを読みますが、より少ないデータしか取得できない場合、これは exception を発生します。"

#: ../../library/urllib.rst:187
msgid ""
"You can still retrieve the downloaded data in this case, it is stored  in "
"the :attr:`content` attribute of the exception instance."
msgstr "このような場合にもダウンロードされたデータを取得することは可能で、これは exception インスタンスの :attr:`content` 属性に保存されています。"

#: ../../library/urllib.rst:190
msgid ""
"If no *Content-Length* header was supplied, :func:`urlretrieve` can not "
"check the size of the data it has downloaded, and just returns it.  In this "
"case you just have to assume that the download was successful."
msgstr "*Content-Length* ヘッダが無い場合、 :func:`urlretrieve` はダウンロードされたデータのサイズをチェックできず、単にそれを返します。この場合は、ダウンロードは成功したと見なす必要があります。"

#: ../../library/urllib.rst:197
msgid ""
"The public functions :func:`urlopen` and :func:`urlretrieve` create an "
"instance of the :class:`FancyURLopener` class and use it to perform their "
"requested actions.  To override this functionality, programmers can create a"
" subclass of :class:`URLopener` or :class:`FancyURLopener`, then assign an "
"instance of that class to the ``urllib._urlopener`` variable before calling "
"the desired function. For example, applications may want to specify a "
"different :mailheader:`User-Agent` header than :class:`URLopener` defines.  "
"This can be accomplished with the following code::"
msgstr "パブリック関数 :func:`urlopen` および :func:`urlretrieve` は :class:`FancyURLopener` クラスのインスタンスを生成します。インスタンスは要求された動作に応じて使用されます。この機能をオーバライドするために、プログラマは :class:`URLopener` または :class:`FancyURLopener` のサブクラスを作り、そのクラスから生成したインスタンスを変数 ``urllib._urlopener`` に代入した後、呼び出したい関数を呼ぶことができます。例えば、アプリケーションが :class:`URLopener` が定義しているのとは異なった :mailheader:`User-Agent` ヘッダを指定したい場合があるかもしれません。この機能は以下のコードで実現できます::"

#: ../../library/urllib.rst:216
msgid ""
"Clear the cache that may have been built up by previous calls to "
":func:`urlretrieve`."
msgstr "以前の :func:`urlretrieve` で生成された可能性のあるキャッシュを消去します。"

#: ../../library/urllib.rst:221
msgid "Utility functions"
msgstr "ユーティリティー関数"

#: ../../library/urllib.rst:225
msgid ""
"Replace special characters in *string* using the ``%xx`` escape. Letters, "
"digits, and the characters ``'_.-'`` are never quoted. By default, this "
"function is intended for quoting the path section of the URL. The optional "
"*safe* parameter specifies additional characters that should not be quoted "
"--- its default value is ``'/'``."
msgstr "*string* に含まれる特殊文字を ``%xx`` エスケープで置換（quote）します。アルファベット、数字、および文字 ``'_.-'`` はに対しては quote 処理を行いません。この関数はデフォルトでは URL の path セクションに対するクォートを想定しています。オプションのパラメタ *safe* は quote 処理しない追加の文字を指定します --- デフォルトの値は ``'/'`` です。"

#: ../../library/urllib.rst:231
msgid "Example: ``quote('/~connolly/')`` yields ``'/%7econnolly/'``."
msgstr "例: ``quote('/~connolly/')`` は ``'/%7econnolly/'`` になります。"

#: ../../library/urllib.rst:236
msgid ""
"Like :func:`quote`, but also replaces spaces by plus signs, as required for "
"quoting HTML form values when building up a query string to go into a URL. "
"Plus signs in the original string are escaped unless they are included in "
"*safe*.  It also does not have *safe* default to ``'/'``."
msgstr ":func:`quote` と似ていますが、加えて空白文字をプラス記号 (\"+\") に置き換えます。これは HTML フォームの値をURLに付加するクエリ文字列にする際に必要な機能です。もとの文字列におけるプラス記号は *safe* に含まれていない限りエスケープ置換されます。上と同様に、 *safe* のデフォルトの値は ``'/'`` です。"

#: ../../library/urllib.rst:244
msgid "Replace ``%xx`` escapes by their single-character equivalent."
msgstr "``%xx`` エスケープをエスケープが表す 1 文字に置き換えます。"

#: ../../library/urllib.rst:246
msgid "Example: ``unquote('/%7Econnolly/')`` yields ``'/~connolly/'``."
msgstr "例: ``unquote('/%7Econnolly/')`` は ``'/~connolly/'`` になります。"

#: ../../library/urllib.rst:251
msgid ""
"Like :func:`unquote`, but also replaces plus signs by spaces, as required "
"for unquoting HTML form values."
msgstr ":func:`unquote` と似ていますが、加えてプラス記号を空白文字に置き換えます。これは quote 処理された HTML フォームの値を元に戻すのに必要な機能です。"

#: ../../library/urllib.rst:257
msgid ""
"Convert a mapping object or a sequence of two-element tuples to a \"percent-"
"encoded\" string, suitable to pass to :func:`urlopen` above as the optional "
"*data* argument.  This is useful to pass a dictionary of form fields to a "
"``POST`` request.  The resulting string is a series of ``key=value`` pairs "
"separated by ``'&'`` characters, where both *key* and *value* are quoted "
"using :func:`quote_plus` above.  When a sequence of two-element tuples is "
"used as the *query* argument, the first element of each tuple is a key and "
"the second is a value. The value element in itself can be a sequence and in "
"that case, if the optional parameter *doseq* is evaluates to *True*, "
"individual ``key=value`` pairs separated by ``'&'`` are generated for each "
"element of the value sequence for the key.  The order of parameters in the "
"encoded string will match the order of parameter tuples in the sequence. The"
" :mod:`urlparse` module provides the functions :func:`parse_qs` and "
":func:`parse_qsl` which are used to parse query strings into Python data "
"structures."
msgstr "マップ型オブジェクト、または 2要素のタプルからなるシーケンスを、 \"パーセントエンコードされた (percent-encoded)\" 文字列に変換して、上述の :func:`urlopen` のオプション引数 *data* に適した形式にします。この関数はフォームのフィールド値でできた辞書を ``POST`` 型のリクエストに渡すときに便利です。返される文字列は ``key=value`` のペアを ``'&'`` で区切ったシーケンスで、 *key* と *value* の双方は上の :func:`quote_plus` でクォートされます。 2つの要素をもったタプルからなるシーケンスが引数 *query* として使われた場合、各タプルの最初の値が key で、2 番目の値が value になります。どちらのケースでも *value* にはシーケンスを入れることができ、その場合オプションのパラメタ *doseq* の評価結果が真であったなら、その *key* の各々の *value* に対して ``'&'`` で区切られた ``key=value`` のペアが生成されます。このときエンコードされた文字列中のパラメタの順番はシーケンス中のタプルの順番と同じになります。 :mod:`urlparse` モジュールでは、関数 :func:`parse_qs` および :func:`parse_qsl` を提供しており、クエリ文字列を解析して Python のデータ構造にするのに利用できます。"

#: ../../library/urllib.rst:276
msgid ""
"Convert the pathname *path* from the local syntax for a path to the form "
"used in the path component of a URL.  This does not produce a complete URL."
"  The return value will already be quoted using the :func:`quote` function."
msgstr "ローカルシステムにおける記法で表されたパス名 *path* を、URL におけるパス部分の形式に変換します。この関数は完全な URL を生成するわけではありません。返される値は常に :func:`quote` を使って quote 処理されたものになります。"

#: ../../library/urllib.rst:283
msgid ""
"Convert the path component *path* from an percent-encoded URL to the local "
"syntax for a path.  This does not accept a complete URL.  This function uses"
" :func:`unquote` to decode *path*."
msgstr "URL のパスの部分 *path* をパーセントエンコードされた URL の形式からローカルシステムにおけるパス記法に変換します。この関数は *path* をデコードするために :func:`unquote` を使います。"

#: ../../library/urllib.rst:290
msgid ""
"This helper function returns a dictionary of scheme to proxy server URL "
"mappings. It scans the environment for variables named ``<scheme>_proxy``, "
"in case insensitive way, for all operating systems first, and when it cannot"
" find it, looks for proxy information from Mac OSX System Configuration for "
"Mac OS X and Windows Systems Registry for Windows."
msgstr "このヘルパー関数はスキーマからプロキシサーバーのURLへのマッピングを行う辞書を返します。この関数はまず、どのOSでも最初に ``<scheme>_proxy`` という名前の環境変数を大文字小文字を区別せずにスキャンします。そこで見つからなかった場合、 Max OS X の場合は Mac OSX システム環境設定を、 Windows の場合はシステムレジストリを参照します。"

#: ../../library/urllib.rst:297
msgid ""
"urllib also exposes certain utility functions like splittype, splithost and "
"others parsing url into various components. But it is recommended to use "
":mod:`urlparse` for parsing urls rather than using these functions directly."
" Python 3 does not expose these helper functions from :mod:`urllib.parse` "
"module."
msgstr "urllib はある種のユーティリティ関数、 splittype, splithost やその他 url をパースしてコンポーネントに分解するようなものを剥き出しにしておりますが、これらを使うのではなくて、url のパースには :mod:`urlparse` を使ってください。Python 3 では :mod:`urllib.parse` でこれらヘルパ関数は曝していません。"

#: ../../library/urllib.rst:305
msgid "URL Opener objects"
msgstr "URL Opener オブジェクト"

#: ../../library/urllib.rst:309
msgid ""
"Base class for opening and reading URLs.  Unless you need to support opening"
" objects using schemes other than :file:`http:`, :file:`ftp:`, or "
":file:`file:`, you probably want to use :class:`FancyURLopener`."
msgstr "URL をオープンし、読み出すためのクラスの基底クラスです。:file:`http:`, :file:`ftp:`, :file:`file:` 以外のスキームを使ったオブジェクトのオープンをサポートしたいのでないかぎり、:class:`FancyURLopener` を使おうと思うことになるでしょう。"

#: ../../library/urllib.rst:313
msgid ""
"By default, the :class:`URLopener` class sends a :mailheader:`User-Agent` "
"header of ``urllib/VVV``, where *VVV* is the :mod:`urllib` version number. "
"Applications can define their own :mailheader:`User-Agent` header by "
"subclassing :class:`URLopener` or :class:`FancyURLopener` and setting the "
"class attribute :attr:`version` to an appropriate string value in the "
"subclass definition."
msgstr "デフォルトでは、 :class:`URLopener` クラスは :mailheader:`User-Agent` ヘッダとして ``urllib/VVV`` を送信します。ここで *VVV* は :mod:`urllib` のバージョン番号です。アプリケーションで独自の :mailheader:`User-Agent` ヘッダを送信したい場合は、 :class:`URLopener` かまたは :class:`FancyURLopener` のサブクラスを作成し、サブクラス定義においてクラス属性 :attr:`version` を適切な文字列値に設定することで行うことができます。"

#: ../../library/urllib.rst:319
msgid ""
"The optional *proxies* parameter should be a dictionary mapping scheme names"
" to proxy URLs, where an empty dictionary turns proxies off completely.  Its"
" default value is ``None``, in which case environmental proxy settings will "
"be used if present, as discussed in the definition of :func:`urlopen`, "
"above."
msgstr "オプションのパラメーター *proxies* はスキーム名をプロキシの URL にマップする辞書でなければなりません。空の辞書はプロキシ機能を完全にオフにします。デフォルトの値は ``None`` で、この場合、 :func:`urlopen` の定義で述べたように、プロキシを設定する環境変数が存在するならそれを使います。"

#: ../../library/urllib.rst:324
msgid ""
"The *context* parameter may be a :class:`ssl.SSLContext` instance.  If "
"given, it defines the SSL settings the opener uses to make HTTPS "
"connections."
msgstr "*context* パラメータは指定する場合 :class:`ssl.SSLContext` インスタンスです。与えられた場合、これは URL をオープンするオブジェクトが HTTPS 接続をするのに使う SSL 設定を定義します。"

#: ../../library/urllib.rst:327
msgid ""
"Additional keyword parameters, collected in *x509*, may be used for "
"authentication of the client when using the :file:`https:` scheme.  The "
"keywords *key_file* and *cert_file* are supported to provide an  SSL key and"
" certificate; both are needed to support client authentication."
msgstr "追加のキーワードパラメーターは *x509* に集められますが、これは :file:`https:` スキームを使った際のクライアント認証に使われることがあります。キーワード引数 *key_file* および *cert_file* が SSL 鍵と証明書を設定するためにサポートされています; クライアント認証をするには両方が必要です。"

#: ../../library/urllib.rst:332
msgid ""
":class:`URLopener` objects will raise an :exc:`IOError` exception if the "
"server returns an error code."
msgstr ":class:`URLopener` オブジェクトは、サーバがエラーコードを返した時には :exc:`IOError` を発生します。"

#: ../../library/urllib.rst:337
msgid ""
"Open *fullurl* using the appropriate protocol.  This method sets up cache "
"and proxy information, then calls the appropriate open method with its input"
" arguments.  If the scheme is not recognized, :meth:`open_unknown` is "
"called. The *data* argument has the same meaning as the *data* argument of "
":func:`urlopen`."
msgstr "適切なプロトコルを使って *fullurl* を開きます。このメソッドはキャッシュとプロキシ情報を設定し、その後適切な open メソッドを入力引数つきで呼び出します。認識できないスキームが与えられた場合、 :meth:`open_unknown` が呼び出されます。 *data* 引数は :func:`urlopen` の引数 *data* と同じ意味を持っています。"

#: ../../library/urllib.rst:346
msgid "Overridable interface to open unknown URL types."
msgstr "オーバライド可能な、未知のタイプの URL を開くためのインタフェースです。"

#: ../../library/urllib.rst:351
msgid ""
"Retrieves the contents of *url* and places it in *filename*.  The return "
"value is a tuple consisting of a local filename and either a "
":class:`mimetools.Message` object containing the response headers (for "
"remote URLs) or ``None`` (for local URLs).  The caller must then open and "
"read the contents of *filename*.  If *filename* is not given and the URL "
"refers to a local file, the input filename is returned.  If the URL is non-"
"local and *filename* is not given, the filename is the output of "
":func:`tempfile.mktemp` with a suffix that matches the suffix of the last "
"path component of the input URL.  If *reporthook* is given, it must be a "
"function accepting three numeric parameters.  It will be called after each "
"chunk of data is read from the network.  *reporthook* is ignored for local "
"URLs."
msgstr "*url* のコンテンツを取得し、 *filename* に書き込みます。返り値はタプルで、ローカルシステムにおけるファイル名と、応答ヘッダを含む :class:`mimetools.Message` オブジェクト(URLがリモートを指している場合)、または ``None``  (URL がローカルを指している場合) からなります。呼び出し側の処理はその後 *filename* を開いて内容を読み出さなくてはなりません。 *filename* が与えられており、かつ URL がローカルシステム上のファイルを示している場合、入力ファイル名が返されます。 URL がローカルのファイルを示しておらず、かつ *filename* が与えられていない場合、ファイル名は入力 URL の最後のパス構成要素につけられた拡張子と同じ拡張子を :func:`tempfile.mktemp` につけたものになります。 *reporthook* を与える場合、この変数は 3 つの数値パラメタを受け取る関数でなくてはなりません。この関数はデータの塊 (chunk) がネットワークから読み込まれるたびに呼び出されます。ローカルの URL を与えた場合 *reporthook* は無視されます。"

#: ../../library/urllib.rst:372
msgid ""
"Variable that specifies the user agent of the opener object.  To get "
":mod:`urllib` to tell servers that it is a particular user agent, set this "
"in a subclass as a class variable or in the constructor before calling the "
"base constructor."
msgstr "URL をオープンするオブジェクトのユーザエージェントを指定する変数です。 :mod:`urllib` を特定のユーザエージェントであるとサーバに通知するには、サブクラスの中でこの値をクラス変数として値を設定するか、コンストラクタの中でベースクラスを呼び出す前に値を設定してください。"

#: ../../library/urllib.rst:380
msgid ""
":class:`FancyURLopener` subclasses :class:`URLopener` providing default "
"handling for the following HTTP response codes: 301, 302, 303, 307 and 401."
"  For the 30x response codes listed above, the :mailheader:`Location` header"
" is used to fetch the actual URL.  For 401 response codes (authentication "
"required), basic HTTP authentication is performed.  For the 30x response "
"codes, recursion is bounded by the value of the *maxtries* attribute, which "
"defaults to 10."
msgstr ":class:`FancyURLopener` は :class:`URLopener` のサブクラスで、以下の HTTP レスポンスコード: 301、302、303、 307、および 401 を取り扱う機能を提供します。レスポンスコード 30x に対しては、 :mailheader:`Location` ヘッダを使って実際の URL を取得します。レスポンスコード 401 (認証が要求されていることを示す) に対しては、BASIC認証 (basic HTTP authintication) が行われます。レスポンスコード 30x に対しては、最大で *maxtries* 属性に指定された数だけ再帰呼び出しを行うようになっています。この値はデフォルトで 10 です。"

#: ../../library/urllib.rst:387
msgid ""
"For all other response codes, the method :meth:`http_error_default` is "
"called which you can override in subclasses to handle the error "
"appropriately."
msgstr "その他のレスポンスコードについては、 :meth:`http_error_default` が呼ばれます。これはサブクラスでエラーを適切に処理するようにオーバーライドすることができます。"

#: ../../library/urllib.rst:392
msgid ""
"According to the letter of :rfc:`2616`, 301 and 302 responses to POST "
"requests must not be automatically redirected without confirmation by the "
"user.  In reality, browsers do allow automatic redirection of these "
"responses, changing the POST to a GET, and :mod:`urllib` reproduces this "
"behaviour."
msgstr ":rfc:`2616` によると、 POST 要求に対する 301 および 302 応答はユーザの承認無しに自動的にリダイレクトしてはなりません。実際は、これらの応答に対して自動リダイレクトを許すブラウザでは POST を GET に変更しており、 :mod:`urllib` でもこの動作を再現します。"

#: ../../library/urllib.rst:397
msgid ""
"The parameters to the constructor are the same as those for "
":class:`URLopener`."
msgstr "コンストラクタに与えるパラメーターは :class:`URLopener` と同じです。"

#: ../../library/urllib.rst:401
msgid ""
"When performing basic authentication, a :class:`FancyURLopener` instance "
"calls its :meth:`prompt_user_passwd` method.  The default implementation "
"asks the users for the required information on the controlling terminal.  A "
"subclass may override this method to support more appropriate behavior if "
"needed."
msgstr "基本的な HTTP 認証を行う際、 :class:`FancyURLopener` インスタンスは :meth:`prompt_user_passwd` メソッドを呼び出します。このメソッドはデフォルトでは実行を制御している端末上で認証に必要な情報を要求するように実装されています。必要ならば、このクラスのサブクラスにおいてより適切な動作をサポートするために :meth:`prompt_user_passwd` メソッドをオーバライドしてもかまいません。"

#: ../../library/urllib.rst:406
msgid ""
"The :class:`FancyURLopener` class offers one additional method that should "
"be overloaded to provide the appropriate behavior:"
msgstr ":class:`FancyURLopener` クラスはオーバライド可能な追加のメソッドを提供しており、適切な振る舞いをさせることができます:"

#: ../../library/urllib.rst:411
msgid ""
"Return information needed to authenticate the user at the given host in the "
"specified security realm.  The return value should be a tuple, ``(user, "
"password)``, which can be used for basic authentication."
msgstr "指定されたセキュリティ領域 (security realm) 下にある与えられたホストにおいて、ユーザー認証に必要な情報を返すための関数です。この関数が返す値は ``(user, password)`` からなるタプルでなければなりません。値は Basic 認証で使われます。"

#: ../../library/urllib.rst:415
msgid ""
"The implementation prompts for this information on the terminal; an "
"application should override this method to use an appropriate interaction "
"model in the local environment."
msgstr "このクラスでの実装では、端末に情報を入力するようプロンプトを出します; ローカルの環境において適切な形で対話型モデルを使うには、このメソッドをオーバライドしなければなりません。"

#: ../../library/urllib.rst:421
msgid ""
"This exception is raised when the :func:`urlretrieve` function detects that "
"the amount of the downloaded data is less than the  expected amount (given "
"by the *Content-Length* header). The :attr:`content` attribute stores the "
"downloaded (and supposedly truncated) data."
msgstr "この例外は :func:`urlretrieve` 関数が、ダウンロードされたデータの量が予期した量 (*Content-Length* ヘッダで与えられる) よりも少ないことを検知した際に発生します。 :attr:`content` 属性には (恐らく途中までの) ダウンロードされたデータが格納されています。"

#: ../../library/urllib.rst:430
msgid ":mod:`urllib` Restrictions"
msgstr ":mod:`urllib` の制限"

#: ../../library/urllib.rst:436
msgid ""
"Currently, only the following protocols are supported: HTTP, (versions 0.9 "
"and 1.0),  FTP, and local files."
msgstr "現在のところ、以下のプロトコルだけがサポートされています: HTTP、 (バージョン 0.9 および 1.0)、 FTP、およびローカルファイル。"

#: ../../library/urllib.rst:439
msgid ""
"The caching feature of :func:`urlretrieve` has been disabled until I find "
"the time to hack proper processing of Expiration time headers."
msgstr ":func:`urlretrieve` のキャッシュ機能は、有効期限ヘッダ (Expiration time header) を正しく処理できるようにハックするための時間を取れるまで、無効にしてあります。"

#: ../../library/urllib.rst:442
msgid ""
"There should be a function to query whether a particular URL is in the "
"cache."
msgstr "ある URL がキャッシュにあるかどうか調べるような関数があればと思っています。"

#: ../../library/urllib.rst:444
msgid ""
"For backward compatibility, if a URL appears to point to a local file but "
"the file can't be opened, the URL is re-interpreted using the FTP protocol."
"  This can sometimes cause confusing error messages."
msgstr "後方互換性のため、 URL がローカルシステム上のファイルを指しているように見えるにも関わらずファイルを開くことができなければ、 URL は FTP プロトコルを使って再解釈されます。この機能は時として混乱を招くエラーメッセージを引き起こします。"

#: ../../library/urllib.rst:448
msgid ""
"The :func:`urlopen` and :func:`urlretrieve` functions can cause arbitrarily "
"long delays while waiting for a network connection to be set up.  This means"
" that it is difficult to build an interactive Web client using these "
"functions without using threads."
msgstr "関数 :func:`urlopen` および :func:`urlretrieve` は、ネットワーク接続が確立されるまでの間、一定でない長さの遅延を引き起こすことがあります。このことは、これらの関数を使ってインタラクティブな Web クライアントを構築するのはスレッドなしには難しいことを意味します。"

#: ../../library/urllib.rst:458
msgid ""
"The data returned by :func:`urlopen` or :func:`urlretrieve` is the raw data "
"returned by the server.  This may be binary data (such as an image), plain "
"text or (for example) HTML.  The HTTP protocol provides type information in "
"the reply header, which can be inspected by looking at the :mailheader"
":`Content-Type` header.  If the returned data is HTML, you can use the "
"module :mod:`htmllib` to parse it."
msgstr ":func:`urlopen` または :func:`urlretrieve` が返すデータはサーバが返す生のデータです。このデータはバイナリデータ (画像データ等) 、生テキスト (plain text)、または (例えば) HTML でもかまいません。HTTP プロトコルはリプライヘッダ (reply header) にデータのタイプに関する情報を返します。タイプは :mailheader:`Content-Type` ヘッダを見ることで推測できます。返されたデータがHTML であれば、 :mod:`htmllib` を使ってパースすることができます。"

#: ../../library/urllib.rst:467
msgid ""
"The code handling the FTP protocol cannot differentiate between a file and a"
" directory.  This can lead to unexpected behavior when attempting to read a "
"URL that points to a file that is not accessible.  If the URL ends in a "
"``/``, it is assumed to refer to a directory and will be handled "
"accordingly.  But if an attempt to read a file leads to a 550 error (meaning"
" the URL cannot be found or is not accessible, often for permission "
"reasons), then the path is treated as a directory in order to handle the "
"case when a directory is specified by a URL but the trailing ``/`` has been "
"left off.  This can cause misleading results when you try to fetch a file "
"whose read permissions make it inaccessible; the FTP code will try to read "
"it, fail with a 550 error, and then perform a directory listing for the "
"unreadable file. If fine-grained control is needed, consider using the "
":mod:`ftplib` module, subclassing :class:`FancyURLopener`, or changing "
"*_urlopener* to meet your needs."
msgstr "FTP プロトコルを扱うコードでは、ファイルとディレクトリを区別できません。このことから、アクセスできないファイルを指している URL からデータを読み出そうとすると、予期しない動作を引き起こす場合があります。 URL が ``/`` で終わっていれば、ディレクトリを指しているものとみなして、それに適した処理を行います。しかし、ファイルの読み出し操作が 550 エラー (URL が存在しないか、主にパーミッションの理由でアクセスできない) になった場合、 URL がディレクトリを指していて、末尾の ``/`` を忘れたケースを処理するため、パスをディレクトリとして扱います。このために、パーミッションのためにアクセスできないファイルを fetch しようとすると、FTP コードはそのファイルを開こうとして 550 エラーに陥り、次にディレクトリ一覧を表示しようとするため、誤解を生むような結果を引き起こす可能性があるのです。よく調整された制御が必要なら、 :mod:`ftplib` モジュールを使うか、 :class:`FancyURLopener` をサブクラス化するか、 *_urlopener* を変更して目的に合わせるよう検討してください。"

#: ../../library/urllib.rst:481
msgid ""
"This module does not support the use of proxies which require "
"authentication. This may be implemented in the future."
msgstr "このモジュールは認証を必要とするプロキシをサポートしません。将来実装されるかもしれません。"

#: ../../library/urllib.rst:486
msgid ""
"Although the :mod:`urllib` module contains (undocumented) routines to parse "
"and unparse URL strings, the recommended interface for URL manipulation is "
"in module :mod:`urlparse`."
msgstr ":mod:`urllib` モジュールは URL 文字列を解釈したり構築したりする (ドキュメント化されていない) ルーチンを含んでいますが、URL を操作するためのインタフェースとしては、 :mod:`urlparse` モジュールをお勧めします。"

#: ../../library/urllib.rst:494
msgid "Examples"
msgstr "使用例"

#: ../../library/urllib.rst:496
msgid ""
"Here is an example session that uses the ``GET`` method to retrieve a URL "
"containing parameters::"
msgstr "以下は ``GET`` メソッドを使ってパラメータを含む URL を取得するセッションの例です::"

#: ../../library/urllib.rst:504
msgid "The following example uses the ``POST`` method instead::"
msgstr "以下は ``POST`` メソッドを代わりに使った例です::"

#: ../../library/urllib.rst:511
msgid ""
"The following example uses an explicitly specified HTTP proxy, overriding "
"environment settings::"
msgstr "以下の例では、環境変数による設定内容に対して上書きする形で HTTP プロキシを明示的に設定しています::"

#: ../../library/urllib.rst:520
msgid ""
"The following example uses no proxies at all, overriding environment "
"settings::"
msgstr "以下の例では、環境変数による設定内容に対して上書きする形で、まったくプロキシを使わないよう設定しています::"
